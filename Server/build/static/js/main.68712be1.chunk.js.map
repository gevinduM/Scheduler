{"version":3,"sources":["components/Load/Load.js","components/Schedule/Schedule.js","containers/Coockpit.js","App.js","reportWebVitals.js","index.js"],"names":["Load","props","Row","Col","loads","member","load","Monday","Tuesday","Wednesday","Thursday","Friday","Total","Schedule","schedule","work","value","roster","onChange","event","changed","style","marginBottom","Coockpit","state","postDataHandler","axios","post","then","response","console","log","catch","error","onEmpChanged","day","item","scheduleIndex","findIndex","p","id","schecduleItem","target","resetMemberLoad","setState","isConsecutiveLunchSlots","inTwoPlacesAtOnce","calculateMembersLoad","employee","employeeIndex","empLoadItem","alert","unDoLastSchedule","isConsecutive","includes","lunchEmpArr","push","index","length","nextIndex","countOccurrences","arr","val","reduce","a","v","morningShiftArr","afternoonShitArr","get","data","mapSchedule","this","map","i","marginTop","mapLoads","Container","fluid","textAlign","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68712be1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport {Row, Col } from 'react-bootstrap';\r\n\r\nconst Load = (props) => {\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col>{props.loads.member}</Col>\r\n                <Col>{props.loads.load.Monday}</Col>\r\n                <Col>{props.loads.load.Tuesday}</Col>\r\n                <Col>{props.loads.load.Wednesday}</Col>\r\n                <Col>{props.loads.load.Thursday}</Col>\r\n                <Col>{props.loads.load.Friday} </Col>\r\n                <Col>{props.loads.load.Total}</Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Load;","import React from 'react';\r\n\r\nimport {Row, Col } from 'react-bootstrap';\r\n\r\nconst Schedule = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col>{props.schedule.work}</Col>\r\n                <Col>\r\n                    <select value={props.schedule.roster.Monday} \r\n                        onChange={(event)=>props.changed('Monday',props.schedule,event)} style={{marginBottom:\"2px\"}}>\r\n\r\n                        <option value=\"\"></option>\r\n                        <option value=\"X1\">X1</option>\r\n                        <option value=\"X2\">X2</option>\r\n                        <option value=\"X3\">X3</option>\r\n                        <option value=\"X4\">X4</option>\r\n                        <option value=\"X5\">X5</option>\r\n                        <option value=\"X6\">X6</option>\r\n                        <option value=\"X7\">X7</option>\r\n\r\n                    </select>\r\n                </Col>\r\n                <Col>\r\n                    <select value={props.schedule.roster.Tuesday} \r\n                        onChange={(event)=>props.changed('Tuesday',props.schedule,event)}>\r\n\r\n                        <option value=\"\"></option>\r\n                        <option value=\"X1\">X1</option>\r\n                        <option value=\"X2\">X2</option>\r\n                        <option value=\"X3\">X3</option>\r\n                        <option value=\"X4\">X4</option>\r\n                        <option value=\"X5\">X5</option>\r\n                        <option value=\"X6\">X6</option>\r\n                        <option value=\"X7\">X7</option>\r\n\r\n                    </select>\r\n                </Col>\r\n                <Col>\r\n                    <select value={props.schedule.roster.Wednesday} \r\n                        onChange={(event)=>props.changed('Wednesday',props.schedule,event)}>\r\n\r\n                        <option value=\"\"></option>\r\n                        <option value=\"X1\">X1</option>\r\n                        <option value=\"X2\">X2</option>\r\n                        <option value=\"X3\">X3</option>\r\n                        <option value=\"X4\">X4</option>\r\n                        <option value=\"X5\">X5</option>\r\n                        <option value=\"X6\">X6</option>\r\n                        <option value=\"X7\">X7</option>\r\n\r\n                    </select>\r\n                </Col>\r\n                <Col>\r\n                    <select value={props.schedule.roster.Thursday} \r\n                        onChange={(event)=>props.changed('Thursday',props.schedule,event)}>\r\n\r\n                        <option value=\"\"></option>\r\n                        <option value=\"X1\">X1</option>\r\n                        <option value=\"X2\">X2</option>\r\n                        <option value=\"X3\">X3</option>\r\n                        <option value=\"X4\">X4</option>\r\n                        <option value=\"X5\">X5</option>\r\n                        <option value=\"X6\">X6</option>\r\n                        <option value=\"X7\">X7</option>\r\n\r\n                    </select>\r\n                </Col>\r\n                <Col>\r\n                    <select value={props.schedule.roster.Friday} \r\n                        onChange={(event)=>props.changed('Friday',props.schedule,event)}>\r\n\r\n                        <option value=\"\"></option>\r\n                        <option value=\"X1\">X1</option>\r\n                        <option value=\"X2\">X2</option>\r\n                        <option value=\"X3\">X3</option>\r\n                        <option value=\"X4\">X4</option>\r\n                        <option value=\"X5\">X5</option>\r\n                        <option value=\"X6\">X6</option>\r\n                        <option value=\"X7\">X7</option>\r\n\r\n                    </select>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Schedule;","import React, { Component } from 'react';\r\n\r\nimport {Container, Row, Col } from 'react-bootstrap';\r\n\r\nimport Load from '../components/Load/Load';\r\nimport Schedule from '../components/Schedule/Schedule';\r\n\r\nimport axios from 'axios';\r\n\r\nclass Coockpit extends Component{\r\n\r\n    state = {\r\n        schedule : [],\r\n        loads:[]\r\n    };\r\n\r\n    componentDidMount(){\r\n        axios.get('/api/state')\r\n            .then(response => {\r\n                console.log('componentDidMount');\r\n                this.setState({schedule: response.data.schedule});\r\n                this.setState({loads: response.data.loads});\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    postDataHandler = () => {\r\n        axios.post('/api/state', this.state)\r\n            .then(response => {\r\n                console.log(response);\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    onEmpChanged = (day,item,event) =>{\r\n\r\n        // let myJSON = JSON.stringify(this.state);\r\n        // console.log(myJSON);\r\n\r\n        const scheduleIndex = this.state.schedule.findIndex(p => {\r\n            return p.id === item.id;\r\n        });\r\n\r\n\r\n        const schecduleItem = {\r\n            ...this.state.schedule[scheduleIndex]\r\n        };\r\n\r\n        console.log(schecduleItem);\r\n\r\n        //if roster already got a emp and new emp is not him remove previos employes load\r\n\r\n        if(schecduleItem.roster[day] !== '' && schecduleItem.roster[day] !== event.target.value){\r\n\r\n            this.resetMemberLoad(day,item);\r\n        }\r\n\r\n        schecduleItem.roster[day] = event.target.value;\r\n\r\n        const schedule = [...this.state.schedule];\r\n\r\n        schedule[scheduleIndex] = schecduleItem;\r\n\r\n        this.setState( {schedule: schedule} );\r\n\r\n        if(event.target.value !== '' && !this.isConsecutiveLunchSlots(day,item) && !this.inTwoPlacesAtOnce(day,item)){\r\n            this.calculateMembersLoad(day,item);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    resetMemberLoad = (day,item) => {\r\n\r\n        const employee = item.roster[day];\r\n\r\n        const employeeIndex = this.state.loads.findIndex(p => {\r\n            return p.member === employee;\r\n        });\r\n\r\n        const empLoadItem = {\r\n            ...this.state.loads[employeeIndex]\r\n        };\r\n\r\n        empLoadItem.load[day] = empLoadItem.load[day] - 1;\r\n        empLoadItem.load.Total = empLoadItem.load.Total - 1;\r\n\r\n        const loads = [...this.state.loads];\r\n\r\n        loads[employeeIndex] = empLoadItem;\r\n\r\n        this.setState( {loads: loads} );\r\n\r\n    }\r\n\r\n    calculateMembersLoad = (day,item) =>{\r\n\r\n        const employee = item.roster[day];\r\n\r\n        const employeeIndex = this.state.loads.findIndex(p => {\r\n            return p.member === employee;\r\n        });\r\n\r\n        const empLoadItem = {\r\n            ...this.state.loads[employeeIndex]\r\n        };\r\n\r\n        if(empLoadItem.load[day] + 1 > 2){\r\n            alert(`${employee} has more than 2 shifts on ${day}`);\r\n            this.unDoLastSchedule(day,item);\r\n        }else if(empLoadItem.load.Total + 1 > 7){\r\n            alert(`${employee} has more than 7 shifts per week`);\r\n            this.unDoLastSchedule(day,item);\r\n        }else{\r\n            empLoadItem.load[day] = empLoadItem.load[day] + 1;\r\n            empLoadItem.load.Total = empLoadItem.load.Total + 1;\r\n\r\n            const loads = [...this.state.loads];\r\n\r\n            loads[employeeIndex] = empLoadItem;\r\n\r\n            this.setState( {loads: loads} );\r\n            this.postDataHandler();\r\n        }\r\n\r\n    }\r\n\r\n    unDoLastSchedule = (day,item) =>{\r\n\r\n        const scheduleIndex = this.state.schedule.findIndex(p => {\r\n            return p.id === item.id;\r\n        });\r\n\r\n        const schecduleItem = {\r\n            ...this.state.schedule[scheduleIndex]\r\n        };\r\n\r\n        schecduleItem.roster[day] = '';\r\n\r\n        const schedule = [...this.state.schedule];\r\n\r\n        schedule[scheduleIndex] = schecduleItem;\r\n\r\n        this.setState( {schedule: schedule} );\r\n\r\n    }\r\n    \r\n    isConsecutiveLunchSlots = (day,item) => {\r\n        let isConsecutive = false;\r\n        \r\n        if(['04','05','06','07'].includes(item.id)){\r\n            const employee = item.roster[day];\r\n\r\n            const lunchEmpArr = [];\r\n\r\n            lunchEmpArr.push(this.state.schedule[3].roster[day]);\r\n            lunchEmpArr.push(this.state.schedule[4].roster[day]);\r\n            lunchEmpArr.push(this.state.schedule[5].roster[day]);\r\n            lunchEmpArr.push(this.state.schedule[6].roster[day]);\r\n\r\n            for(let index =0;index < lunchEmpArr.length; index++){\r\n\r\n                let nextIndex = index + 1;\r\n                if(nextIndex < lunchEmpArr.length){\r\n                    if(lunchEmpArr[index] !== ''){\r\n                        if(lunchEmpArr[index] === employee && lunchEmpArr[nextIndex] === employee){\r\n                            isConsecutive = true;\r\n                            this.unDoLastSchedule(day,item);\r\n                            alert(`${employee} is in consecutive lunch slots on ${day}`);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n\r\n        return isConsecutive;\r\n    }\r\n\r\n    countOccurrences = (arr, val) => arr.reduce((a, v) => (v === val ? a + 1 : a), 0);\r\n\r\n    inTwoPlacesAtOnce = (day,item) =>{\r\n\r\n        const employee = item.roster[day];\r\n        let inTwoPlacesAtOnce = false;\r\n\r\n        if(['01','02','03'].includes(item.id)){\r\n\r\n            const morningShiftArr = [];\r\n\r\n            morningShiftArr.push(this.state.schedule[0].roster[day]);\r\n            morningShiftArr.push(this.state.schedule[1].roster[day]);\r\n            morningShiftArr.push(this.state.schedule[2].roster[day]);\r\n\r\n            if(this.countOccurrences(morningShiftArr,employee) > 1){\r\n                inTwoPlacesAtOnce = true;\r\n                this.unDoLastSchedule(day,item);\r\n                alert(`${employee} is already in a morning shift on ${day}`);\r\n            }\r\n            \r\n        }else if(['08','09','10'].includes(item.id)){\r\n\r\n            const afternoonShitArr = [];\r\n\r\n            afternoonShitArr.push(this.state.schedule[7].roster[day]);\r\n            afternoonShitArr.push(this.state.schedule[8].roster[day]);\r\n            afternoonShitArr.push(this.state.schedule[9].roster[day]);\r\n\r\n            if(this.countOccurrences(afternoonShitArr,employee) > 1){\r\n                inTwoPlacesAtOnce = true;\r\n                this.unDoLastSchedule(day,item);\r\n                alert(`${employee} is already in afternoon shift on ${day}`);\r\n            }\r\n\r\n        }\r\n        \r\n        return inTwoPlacesAtOnce;\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        let mapSchedule = this.state.schedule.map((item,i)=>{\r\n            if(item.id === '04' || item.id === '08')\r\n                return <div style={{marginTop:\"10px\"}}><Schedule schedule={item} key={item.id} changed={this.onEmpChanged}/></div>\r\n            else\r\n                return <Schedule schedule={item} key={item.id} changed={this.onEmpChanged}/>\r\n        });\r\n\r\n        let mapLoads = this.state.loads.map((item,i)=>{\r\n            return <Load loads={item} key={item.member}/>\r\n        });\r\n\r\n        return(\r\n            <div>\r\n                <Container fluid>\r\n                    <p style={{textAlign:\"center\"}}>Schedule</p>\r\n                    <Row>\r\n                        <Col></Col>\r\n                        <Col>Monday</Col>\r\n                        <Col>Tuesday</Col>\r\n                        <Col>Wednesday</Col>\r\n                        <Col>Thursday</Col>\r\n                        <Col>Friday </Col>\r\n                    </Row>\r\n\r\n                    {mapSchedule}\r\n\r\n                    <p style={{textAlign:\"center\", marginTop:\"20px\"}}>Load</p>\r\n                    <Row>\r\n                        <Col>Staff Member</Col>\r\n                        <Col>Monday</Col>\r\n                        <Col>Tuesday</Col>\r\n                        <Col>Wednesday</Col>\r\n                        <Col>Thursday</Col>\r\n                        <Col>Friday </Col>\r\n                        <Col>Totals</Col>\r\n                    </Row>\r\n\r\n                    {mapLoads}\r\n\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Coockpit;","import './App.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport Coockpit from './containers/Coockpit';\n\nfunction App() {\n  return (\n    <div>\n      <Coockpit />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}